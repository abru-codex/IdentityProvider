@model IdentityProvider.Areas.Admin.Models.ViewModels.RolePermissionsViewModel
@{
    ViewData["Title"] = "Role Permissions";
    ViewData["PageTitle"] = $"Permissions for {Model.RoleName}";
    ViewData["PageSubtitle"] = "Manage role permissions and access control";
    ViewData["Breadcrumbs"] = new List<(string Text, string? Url)>
    {
        ("Admin", Url.Action("Index", "Dashboard", new { area = "Admin" })),
        ("Roles", Url.Action("Index", "Roles", new { area = "Admin" })),
        ($"{Model.RoleName}", Url.Action("Details", "Roles", new { area = "Admin", id = Model.RoleId })),
        ("Permissions", null)
    };
    ViewData["PageActions"] = $@"
        <a href=""/Admin/Roles/AssignPermissions/{Model.RoleId}"" class=""btn btn-primary"">
            <i class=""bi bi-gear""></i> Manage Permissions
        </a>
        <a href=""/Admin/Roles/Details/{Model.RoleId}"" class=""btn btn-outline-secondary"">
            <i class=""bi bi-arrow-left""></i> Back to Role
        </a>";
}

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="bi bi-check-circle"></i> @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<div class="row">
    <div class="col-md-8">
        <div class="admin-card">
            <div class="card-header">
                <div class="d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">
                        <i class="bi bi-shield-check me-2"></i>Assigned Permissions
                    </h5>
                    <span class="badge bg-primary">@Model.AssignedPermissions.Count total</span>
                </div>
            </div>
            <div class="card-body">
                @if (Model.AssignedPermissions.Any())
                {
                    @foreach (var category in Model.PermissionCategories.Where(c => c.Value.Any(p => p.IsAssigned)))
                    {
                        var assignedInCategory = category.Value.Where(p => p.IsAssigned).ToList();
                        <div class="mb-4">
                            <h6 class="text-muted border-bottom pb-2 mb-3">
                                <i class="bi bi-folder me-2"></i>@category.Key
                                <span class="badge bg-secondary ms-2">@assignedInCategory.Count</span>
                            </h6>
                            <div class="row g-2">
                                @foreach (var permission in assignedInCategory)
                                {
                                    <div class="col-md-6">
                                        <div class="d-flex justify-content-between align-items-center p-3 border rounded bg-light">
                                            <div class="flex-grow-1">
                                                <div class="fw-semibold">@permission.Permission</div>
                                                <small class="text-muted">@permission.Description</small>
                                            </div>
                                            <button type="button" 
                                                    class="btn btn-sm btn-outline-danger remove-permission-btn"
                                                    data-role-id="@Model.RoleId"
                                                    data-permission="@permission.Permission"
                                                    title="Remove Permission">
                                                <i class="bi bi-x-lg"></i>
                                            </button>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="text-center py-5">
                        <i class="bi bi-shield-x display-1 text-muted"></i>
                        <h5 class="mt-3 text-muted">No Permissions Assigned</h5>
                        <p class="text-muted">This role has no permissions assigned yet.</p>
                        <a href="/Admin/Roles/AssignPermissions/@Model.RoleId" class="btn btn-primary">
                            <i class="bi bi-plus-circle"></i> Assign Permissions
                        </a>
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="col-md-4">
        <div class="admin-card">
            <div class="card-header">
                <h5 class="mb-0">
                    <i class="bi bi-info-circle me-2"></i>Role Summary
                </h5>
            </div>
            <div class="card-body">
                <div class="row text-center">
                    <div class="col-6">
                        <div class="border-end">
                            <div class="h4 text-primary mb-1">@Model.AssignedPermissions.Count</div>
                            <small class="text-muted">Assigned</small>
                        </div>
                    </div>
                    <div class="col-6">
                        <div class="h4 text-secondary mb-1">@(Model.TotalPermissions - Model.AssignedPermissions.Count)</div>
                        <small class="text-muted">Available</small>
                    </div>
                </div>
                <hr>
                <div class="d-grid gap-2">
                    <a href="/Admin/Roles/AssignPermissions/@Model.RoleId" class="btn btn-primary btn-sm">
                        <i class="bi bi-gear"></i> Manage All Permissions
                    </a>
                    <button type="button" class="btn btn-outline-warning btn-sm" onclick="clearAllPermissions('@Model.RoleId')">
                        <i class="bi bi-trash"></i> Clear All Permissions
                    </button>
                </div>
            </div>
        </div>

        @if (Model.PermissionCategories.Any(c => c.Value.Any(p => !p.IsAssigned)))
        {
            <div class="admin-card mt-3">
                <div class="card-header">
                    <h6 class="mb-0">
                        <i class="bi bi-plus-circle me-2"></i>Quick Add
                    </h6>
                </div>
                <div class="card-body">
                    <p class="small text-muted mb-3">Quickly add common permissions:</p>
                    @foreach (var category in Model.PermissionCategories.Take(3))
                    {
                        var available = category.Value.Where(p => !p.IsAssigned).Take(2);
                        @foreach (var permission in available)
                        {
                            <button type="button" 
                                    class="btn btn-outline-primary btn-sm me-1 mb-1 add-permission-btn"
                                    data-role-id="@Model.RoleId"
                                    data-permission="@permission.Permission"
                                    title="@permission.Description">
                                + @permission.Permission
                            </button>
                        }
                    }
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Remove permission
            $('.remove-permission-btn').on('click', function() {
                const roleId = $(this).data('role-id');
                const permission = $(this).data('permission');
                
                if (confirm(`Are you sure you want to remove permission "${permission}"?`)) {
                    $.post(`/Admin/Roles/RemovePermission/${roleId}`, { permission: permission }, function(response) {
                        if (response.success) {
                            location.reload();
                        } else {
                            alert('Error: ' + response.message);
                        }
                    });
                }
            });

            // Add permission
            $('.add-permission-btn').on('click', function() {
                const roleId = $(this).data('role-id');
                const permission = $(this).data('permission');
                
                $.post(`/Admin/Roles/AddPermission/${roleId}`, { permission: permission }, function(response) {
                    if (response.success) {
                        location.reload();
                    } else {
                        alert('Error: ' + response.message);
                    }
                });
            });
        });

        function clearAllPermissions(roleId) {
            if (confirm('Are you sure you want to remove ALL permissions from this role? This action cannot be undone.')) {
                $.post(`/Admin/Roles/AssignPermissions/${roleId}`, { 
                    RoleId: roleId, 
                    SelectedPermissions: [] 
                }, function(response) {
                    location.reload();
                }).fail(function() {
                    alert('Failed to clear permissions. Please try again.');
                });
            }
        }
    </script>
}
