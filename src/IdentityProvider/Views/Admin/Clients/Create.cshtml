@model IdentityProvider.Models.ViewModels.CreateClientViewModel
@{
    ViewData["Title"] = "Create OAuth Client";
    Layout = "_AdminLayout";
}

<!-- Breadcrumb Navigation -->
<nav aria-label="breadcrumb" class="mb-4">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/Admin" class="text-decoration-none">Dashboard</a></li>
        <li class="breadcrumb-item"><a href="/Admin/Clients" class="text-decoration-none">OAuth Clients</a></li>
        <li class="breadcrumb-item active" aria-current="page">Create Client</li>
    </ol>
</nav>

<div class="row">
    <div class="col-lg-8">
        <div class="card">
            <div class="card-header">
                <h4 class="mb-0">
                    <i class="bi bi-plus-circle"></i> Create New OAuth Client
                </h4>
                <p class="text-muted mb-0 mt-2">Configure a new OAuth 2.0 / OpenID Connect client application</p>
            </div>
            <div class="card-body">
                <form asp-action="Create" method="post" novalidate>
                    <!-- Basic Information -->
                    <div class="row mb-4">
                        <div class="col-12">
                            <h6 class="text-primary mb-3">
                                <i class="bi bi-info-circle"></i> Basic Information
                            </h6>
                        </div>
                        
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="ClientId" class="form-label">
                                    Client ID <span class="text-danger">*</span>
                                </label>
                                <input asp-for="ClientId" class="form-control" placeholder="my-app-client" />
                                <div class="form-text">
                                    <i class="bi bi-info-circle"></i> Unique identifier for your application (lowercase, letters, numbers, hyphens, underscores only)
                                </div>
                                <span asp-validation-for="ClientId" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="ClientName" class="form-label">
                                    Client Name <span class="text-danger">*</span>
                                </label>
                                <input asp-for="ClientName" class="form-control" placeholder="My Application" />
                                <div class="form-text">
                                    <i class="bi bi-info-circle"></i> Human-readable name for your application
                                </div>
                                <span asp-validation-for="ClientName" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="col-12">
                            <div class="mb-3">
                                <label asp-for="ClientSecret" class="form-label">
                                    Client Secret <span class="text-danger">*</span>
                                </label>
                                <div class="input-group">
                                    <input asp-for="ClientSecret" type="password" class="form-control" id="clientSecret" />
                                    <button class="btn btn-outline-secondary" type="button" id="toggleSecret">
                                        <i class="bi bi-eye" id="toggleIcon"></i>
                                    </button>
                                    <button class="btn btn-outline-primary" type="button" id="generateSecret">
                                        <i class="bi bi-arrow-clockwise"></i> Generate
                                    </button>
                                </div>
                                <div class="form-text">
                                    <i class="bi bi-shield-check"></i> Minimum 12 characters. Keep this secret secure!
                                </div>
                                <span asp-validation-for="ClientSecret" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <!-- URI Configuration -->
                    <div class="row mb-4">
                        <div class="col-12">
                            <h6 class="text-primary mb-3">
                                <i class="bi bi-link-45deg"></i> URI Configuration
                            </h6>
                        </div>

                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="RedirectUris" class="form-label">Redirect URIs</label>
                                <textarea asp-for="RedirectUris" class="form-control" rows="4" 
                                          placeholder="https://myapp.com/signin-oidc&#10;https://localhost:5001/signin-oidc"></textarea>
                                <div class="form-text">
                                    <i class="bi bi-info-circle"></i> One URI per line. Where users will be redirected after authentication
                                </div>
                                <span asp-validation-for="RedirectUris" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="PostLogoutRedirectUris" class="form-label">Post Logout Redirect URIs</label>
                                <textarea asp-for="PostLogoutRedirectUris" class="form-control" rows="4" 
                                          placeholder="https://myapp.com/signout-callback-oidc&#10;https://localhost:5001/signout-callback-oidc"></textarea>
                                <div class="form-text">
                                    <i class="bi bi-info-circle"></i> One URI per line. Where users will be redirected after logout
                                </div>
                                <span asp-validation-for="PostLogoutRedirectUris" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="col-12">
                            <div class="mb-3">
                                <label asp-for="AllowedCorsOrigins" class="form-label">Allowed CORS Origins</label>
                                <textarea asp-for="AllowedCorsOrigins" class="form-control" rows="3" 
                                          placeholder="https://myapp.com&#10;https://localhost:3000"></textarea>
                                <div class="form-text">
                                    <i class="bi bi-info-circle"></i> One origin per line. Origins allowed to make CORS requests to the token endpoint
                                </div>
                                <span asp-validation-for="AllowedCorsOrigins" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <!-- Scopes and Permissions -->
                    <div class="row mb-4">
                        <div class="col-12">
                            <h6 class="text-primary mb-3">
                                <i class="bi bi-key"></i> Scopes and Permissions
                            </h6>
                        </div>

                        <div class="col-12">
                            <div class="mb-3">
                                <label class="form-label">Allowed Scopes</label>
                                <div class="row">
                                    @for (int i = 0; i < Model.AvailableScopes.Count; i++)
                                    {
                                        <div class="col-md-4 col-sm-6">
                                            <div class="form-check mb-2">
                                                <input class="form-check-input" type="checkbox" 
                                                       name="AllowedScopes" value="@Model.AvailableScopes[i]" 
                                                       id="scope_@i" 
                                                       @(Model.AllowedScopes.Contains(Model.AvailableScopes[i]) ? "checked" : "") />
                                                <label class="form-check-label" for="scope_@i">
                                                    <code>@Model.AvailableScopes[i]</code>
                                                </label>
                                            </div>
                                        </div>
                                    }
                                </div>
                                <div class="form-text">
                                    <i class="bi bi-info-circle"></i> Select the scopes this client is allowed to request
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Security Settings -->
                    <div class="row mb-4">
                        <div class="col-12">
                            <h6 class="text-primary mb-3">
                                <i class="bi bi-shield-lock"></i> Security Settings
                            </h6>
                        </div>

                        <div class="col-md-6">
                            <div class="form-check form-switch mb-3">
                                <input asp-for="RequirePkce" class="form-check-input" type="checkbox" id="requirePkce" />
                                <label class="form-check-label" for="requirePkce">
                                    <strong>Require PKCE</strong>
                                    <span class="badge bg-success ms-2" data-bs-toggle="tooltip" 
                                          title="Proof Key for Code Exchange - Recommended for security">
                                        <i class="bi bi-shield-check"></i> Recommended
                                    </span>
                                </label>
                                <div class="form-text">
                                    <i class="bi bi-info-circle"></i> Protects against authorization code interception attacks
                                </div>
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="form-check form-switch mb-3">
                                <input asp-for="AllowOfflineAccess" class="form-check-input" type="checkbox" id="allowOfflineAccess" />
                                <label class="form-check-label" for="allowOfflineAccess">
                                    <strong>Allow Offline Access</strong>
                                    <span class="badge bg-primary ms-2">
                                        <i class="bi bi-arrow-clockwise"></i> Refresh Tokens
                                    </span>
                                </label>
                                <div class="form-text">
                                    <i class="bi bi-info-circle"></i> Allows issuing refresh tokens for long-lived access
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Token Lifetimes -->
                    <div class="row mb-4">
                        <div class="col-12">
                            <h6 class="text-primary mb-3">
                                <i class="bi bi-clock"></i> Token Lifetimes
                            </h6>
                        </div>

                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="AccessTokenLifetimeMinutes" class="form-label">
                                    Access Token Lifetime (minutes) <span class="text-danger">*</span>
                                </label>
                                <input asp-for="AccessTokenLifetimeMinutes" type="number" class="form-control" min="1" max="1440" />
                                <div class="form-text">
                                    <i class="bi bi-info-circle"></i> How long access tokens remain valid (1-1440 minutes)
                                </div>
                                <span asp-validation-for="AccessTokenLifetimeMinutes" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="RefreshTokenLifetimeDays" class="form-label">
                                    Refresh Token Lifetime (days) <span class="text-danger">*</span>
                                </label>
                                <input asp-for="RefreshTokenLifetimeDays" type="number" class="form-control" min="1" max="365" />
                                <div class="form-text">
                                    <i class="bi bi-info-circle"></i> How long refresh tokens remain valid (1-365 days)
                                </div>
                                <span asp-validation-for="RefreshTokenLifetimeDays" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <!-- Form Actions -->
                    <div class="d-flex gap-2 justify-content-end">
                        <a href="/Admin/Clients" class="btn btn-secondary">
                            <i class="bi bi-arrow-left"></i> Cancel
                        </a>
                        <button type="submit" class="btn btn-primary">
                            <i class="bi bi-check-circle"></i> Create Client
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <div class="col-lg-4">
        <div class="card">
            <div class="card-header">
                <h6 class="mb-0">
                    <i class="bi bi-lightbulb"></i> Configuration Tips
                </h6>
            </div>
            <div class="card-body">
                <div class="alert alert-info">
                    <h6><i class="bi bi-shield-check"></i> Security Best Practices</h6>
                    <ul class="mb-0 small">
                        <li>Always enable PKCE for public clients</li>
                        <li>Use HTTPS URLs for all redirect URIs</li>
                        <li>Keep client secrets secure and rotate regularly</li>
                        <li>Use minimal required scopes</li>
                    </ul>
                </div>

                <div class="alert alert-warning">
                    <h6><i class="bi bi-exclamation-triangle"></i> Common Issues</h6>
                    <ul class="mb-0 small">
                        <li>Redirect URI must match exactly</li>
                        <li>Localhost URIs are for development only</li>
                        <li>Shorter token lifetimes improve security</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Initialize tooltips
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl);
        });

        // Toggle client secret visibility
        document.getElementById('toggleSecret').addEventListener('click', function() {
            const secretInput = document.getElementById('clientSecret');
            const toggleIcon = document.getElementById('toggleIcon');
            
            if (secretInput.type === 'password') {
                secretInput.type = 'text';
                toggleIcon.className = 'bi bi-eye-slash';
            } else {
                secretInput.type = 'password';
                toggleIcon.className = 'bi bi-eye';
            }
        });

        // Generate random client secret
        document.getElementById('generateSecret').addEventListener('click', function() {
            const charset = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~';
            let secret = '';
            for (let i = 0; i < 32; i++) {
                secret += charset.charAt(Math.floor(Math.random() * charset.length));
            }
            document.getElementById('clientSecret').value = secret;
        });

        // Form validation
        (function() {
            'use strict';
            window.addEventListener('load', function() {
                var forms = document.getElementsByClassName('needs-validation');
                var validation = Array.prototype.filter.call(forms, function(form) {
                    form.addEventListener('submit', function(event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();
    </script>
}